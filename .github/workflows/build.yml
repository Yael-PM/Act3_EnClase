name: Build and Test

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    name: Build, Test, and Analyze
    runs-on: ubuntu-latest
    
    steps:
      # 1. Clonar el repositorio
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Deshabilitar clones superficiales para mejor análisis en SonarQube

      # 2. Instalar dependencias necesarias
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential

      # 3. Configurar, compilar y ejecutar las pruebas
      - name: Configure, Build, and Test
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build .
          ctest --output-on-failure

      - name: Run test1
        run: |
          g++ tests/test1.cpp -o tests/test1
          chmod +x tests/test1
          ./tests/test1

      - name: Run test2
        run: |
          g++ tests/test2.cpp -o tests/test2
          chmod +x tests/test2
          ./tests/test2

      # 4. Ejecutar análisis con SonarQube
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # 5. Verificar Quality Gate (Opcional, descomentar si se desea aplicar)
      # - name: SonarQube Quality Gate
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
